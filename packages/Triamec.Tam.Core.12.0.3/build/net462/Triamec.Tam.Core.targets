<?xml version="1.0" encoding="utf-8" ?>
<!--
    Copyright © 2019 Triamec Motion AG
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--
    ============================================================
                                        _CopyModifiedWinFilesToOutputDirectory

    Copy Content_ModifiedWins items to the output directory if they are changed.
    This is different to CopyOutputDirectory=Always since copying is skipped for unmodified files,
    and different to PreserveNewest since that skips modified files which aren't newer.
    This supports NuGet downgrading, where we absolutely want all assets from the selected version.
    ============================================================
    -->
  <Target Name="_CopyModifiedWinFilesToOutputDirectory" AfterTargets="CopyFilesToOutputDirectory">
    <Copy SourceFiles="@(Content_ModifiedWins)"
          DestinationFiles="$(OutDir)%(Link)"
          SkipUnchangedFiles="true"
          OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)"
          Retries="$(CopyRetryCount)"
          RetryDelayMilliseconds="$(CopyRetryDelayMilliseconds)"
          UseHardlinksIfPossible="$(CreateHardLinksForAdditionalFilesIfPossible)">
      <!--
        BackwardCompatibility: Add as soon as VS2015 doesn't longer need to be supported:
          UseSymboliclinksIfPossible="$(CreateSymbolicLinksForAdditionalFilesIfPossible)"
        -->
      <Output TaskParameter="DestinationFiles" ItemName="FileWrites"/>
    </Copy>
  </Target>

  <PropertyGroup>
    <!-- BackwardCompatibility: This makes the project files a dependency of all targets so that things rebuild if they change -->
    <MSBuildAllProjects Condition=" '$(MSBuildVersion)' == '' Or '$(MSBuildVersion)' &lt; '16.0' ">$(MSBuildAllProjects);$(MSBuildThisFileFullPath)</MSBuildAllProjects>
  </PropertyGroup>

  <!-- BackwardCompatibility: Allow to open and view this file. Don't edit it except for temporal testing.
       For SDK style projects, the user has r/o access when showing all files and delving or searching in the Imports
       node. -->
  <ItemGroup Condition="'$(UsingMicrosoftNETSdk)' != 'true'">
    <None Include="$(MSBuildThisFileFullPath)">
      <Link>Properties\Build\$(MSBuildThisFile)</Link>
      <Visible>true</Visible>
    </None>
  </ItemGroup>
</Project>
