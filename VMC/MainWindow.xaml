<Window x:Class="VMC.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:VMC" xmlns:misc="clr-namespace:VMC.Misc"
        mc:Ignorable="d"
        Title="Visual Machine Control" Icon=".\Icons\Machine.png" Height="500" Width="900" MinHeight="300" MinWidth="850" WindowStartupLocation="CenterScreen" Background="#FF444444" Closing="MainWindow_Closing" >
    <Window.Resources>
        <misc:DoubleStringConverter x:Key="DoubleStringConverter"/>
        <misc:FloatStringConverter x:Key="FloatStringConverter"/>
        <misc:FloatPercentStringConverter x:Key="FloatPercentStringConverter"/>
        <misc:BoolColorConverter x:Key="BoolColorConverter"/>
        <misc:BoolStringConverter x:Key="BoolStringConverter"/>
        <misc:BoolVisibilityConverter x:Key="BoolVisibilityConverter"/>

        <Color x:Key="DefaultItemColor">#FF666666</Color>
        <Color x:Key="TabHeaderColor">Gainsboro</Color>
        <Color x:Key="BtnDisabledColor">#33FFFFFF</Color>
        <Color x:Key="BtnMouseOverColor">#22000000</Color>
        <Color x:Key="TxtBoxColor">#99FFEBCD</Color>

        <SolidColorBrush x:Key="DefaultItemBackground" Color="{DynamicResource DefaultItemColor}"/>
        <SolidColorBrush x:Key="BorderBackground" Color="{DynamicResource TabHeaderColor}"/>
        <SolidColorBrush x:Key="BtnDisabledBackground" Color="{DynamicResource BtnDisabledColor}"/>
        <SolidColorBrush x:Key="BtnMouseOverBackground" Color="{DynamicResource BtnMouseOverColor}"/>
        <SolidColorBrush x:Key="TxtBoxBackground" Color="{DynamicResource TxtBoxColor}"/>
        <LinearGradientBrush x:Key="PanelBackground" StartPoint="0,0" EndPoint="0,1">
            <GradientStop Color="{DynamicResource TabHeaderColor}" Offset=".2"/>
            <GradientStop Color="{DynamicResource DefaultItemColor}" Offset="1"/>
        </LinearGradientBrush>

        <Style TargetType="TabItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TabItem">
                        <Border Name="Border" BorderThickness="1,1,1,0" BorderBrush="{StaticResource BorderBackground}" CornerRadius="5,5,0,0" Margin="0,0,2,0">
                            <ContentPresenter x:Name="ContentSite" Height="16" Width="80" VerticalAlignment="Center" HorizontalAlignment="Left" ContentSource="Header" Margin="10,2"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource BorderBackground}" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource DefaultItemBackground}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="Button" x:Key="TabButton">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Border.CornerRadius" Value="5" />
            <Setter Property="Height" Value="24"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="Margin" Value="2, 0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="BtnBorder" 
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                            <ContentPresenter x:Name="BtnContentPresenter"  
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                IsEnabled="{TemplateBinding IsEnabled}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Margin="{TemplateBinding Margin}">
                            </ContentPresenter>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="BtnBorder" Property="Background" Value="{StaticResource BtnMouseOverBackground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="BtnBorder" Property="Background" Value="{StaticResource BtnDisabledBackground}"/>
                                <Setter TargetName="BtnContentPresenter" Property="Effect">
                                    <Setter.Value>
                                        <local:BlackWhiteTransparent/>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style TargetType="Button" x:Key="SmallTabButton" BasedOn="{StaticResource TabButton}">
            <Setter Property="Height" Value="22"/>
            <Setter Property="Width" Value="{Binding Path=Height}"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style TargetType="Button" x:Key="LargeTabButton" BasedOn="{StaticResource TabButton}">
            <Setter Property="Height" Value="72"/>
            <Setter Property="Width" Value="50"/>
            <Setter Property="Margin" Value="5,0"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Border.CornerRadius" Value="10" />
        </Style>

        <Style TargetType="Image">
            <Setter Property="Stretch" Value="Fill"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="2,2,5,2"/>
        </Style>

        <Style TargetType="Rectangle">
            <Setter Property="Width" Value="40"/>
            <Setter Property="Height" Value="15"/>
            <Setter Property="RadiusX" Value="3"/>
            <Setter Property="RadiusY" Value="3"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Stroke" Value="DimGray"/>
            <Setter Property="StrokeThickness" Value="1"/>
        </Style>

        <Style TargetType="TextBlock">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="IsEnabled" Value="False"/>
        </Style>

        <Style TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource TxtBoxBackground}"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Right"/>
            <Setter Property="IsEnabled" Value="True"/>
        </Style>
    </Window.Resources>


    <DockPanel>
        <TabControl DockPanel.Dock="Top" TabStripPlacement="Top" Height="104" HorizontalContentAlignment="Left" VerticalAlignment="Center"
                    Background="{StaticResource PanelBackground}" BorderBrush="{StaticResource BorderBackground}" BorderThickness="0,1,0,1">

            <TabItem x:Name="TiProgram">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source=".\Icons\File.png"/>
                        <TextBlock>Program</TextBlock>
                    </StackPanel>
                </TabItem.Header>

                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Vertical">
                        <Button x:Name="BtnLoadConfig" Style="{StaticResource TabButton}" IsEnabled="{Binding Path=IsNotBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Click="BtnLoad_Click">
                            <StackPanel Orientation="Horizontal">
                                <Image Source=".\Icons\Change.png"/>
                                <TextBlock>Load TamConfig</TextBlock>
                            </StackPanel>
                        </Button>
                        <Button x:Name="BtnPersistConfig" Style="{StaticResource TabButton}" IsEnabled="{Binding Path=IsConnected, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Click="BtnPersist_Click">
                            <StackPanel Orientation="Horizontal">
                                <Image Source=".\Icons\Burn.png"/>
                                <TextBlock>Persist Config</TextBlock>
                            </StackPanel>
                            <Button.Triggers>
                                <!-- Animates the button's opacity -->
                                <EventTrigger RoutedEvent="Button.Click">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="BtnPersistConfig" Storyboard.TargetProperty="Opacity" From="1.0" To="0.5" Duration="0:0:0.1" RepeatBehavior="0:0:1" AutoReverse="True"/>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </Button.Triggers>
                        </Button>
                        <Button x:Name="BtnL" Style="{StaticResource TabButton}" IsEnabled="{Binding Path=IsConnected, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Click="BtnSaveAs_Click">
                            <StackPanel Orientation="Horizontal">
                                <Image Source=".\Icons\SaveAs.png"/>
                                <TextBlock>Save as...</TextBlock>
                            </StackPanel>
                        </Button>
                    </StackPanel>

                    <StackPanel Orientation="Vertical">
                        <Button x:Name="BtnOpen" Style="{StaticResource TabButton}" Click="BtnOpen_Click">
                            <StackPanel Orientation="Horizontal">
                                <Image Source=".\Icons\Open.png"/>
                                <TextBlock>Set Directory</TextBlock>
                            </StackPanel>
                        </Button>
                    </StackPanel>

                    <StackPanel Orientation="Vertical">
                        <ComboBox x:Name="CBoMeasure" Margin="3" Width="200" IsEditable="True" IsReadOnly="True"/>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" IsEnabled="{Binding Path=IsConnected, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                        <Button x:Name="BtnRun" Style="{StaticResource LargeTabButton}" Click="BtnRun_Click" IsEnabled="{Binding Path=IsNotBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                            <StackPanel Orientation="Vertical">
                                <Image Margin="5" Source=".\Icons\Run.png"/>
                            </StackPanel>
                        </Button>
                        <Button x:Name="BtnStop" Style="{StaticResource LargeTabButton}" Click="BtnStop_Click" IsEnabled="{Binding Path=IsBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                            <StackPanel Orientation="Vertical">
                                <Image Margin="5" Source=".\Icons\Stop.png"/>
                            </StackPanel>
                        </Button>
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem x:Name="TiMachine">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source=".\Icons\Machine.png"/>
                        <TextBlock>Machine</TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <StackPanel x:Name="SpMachine" Orientation="Horizontal" IsEnabled="{Binding Path=IsConnected, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="21"/>
                            <ColumnDefinition Width="103"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Button Grid.Column="0" Grid.Row="0" Style="{StaticResource TabButton}" Click="BtnEnable_Click" 
                                ToolTip="{Binding Path=AxisX.StateAndErrorInfo, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                IsEnabled="{Binding Path=IsNotBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Grid.ColumnSpan="2" Margin="2,0,2,1">
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Name="RectStateX" Width="13" Height="13" Margin="2,0,10,0" Fill="{Binding Path=AxisX.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolColorConverter}}"/>
                                <TextBlock Text="X "/>
                                <TextBlock Text="{Binding Path=AxisX.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolStringConverter}, ConverterParameter=Disable/Enable}" />
                            </StackPanel>
                        </Button>
                        <Button Grid.Column="0" Grid.Row="1" Style="{StaticResource TabButton}" Click="BtnEnable_Click" 
                                ToolTip="{Binding Path=AxisY.StateAndErrorInfo, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                IsEnabled="{Binding Path=IsNotBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Grid.ColumnSpan="2" Margin="2,1,2,0">
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Width="13" Height="13" Margin="2,0,10,0" Fill="{Binding Path=AxisY.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolColorConverter}}"/>
                                <TextBlock Text="Y "/>
                                <TextBlock Text="{Binding Path=AxisY.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolStringConverter}, ConverterParameter=Disable/Enable}" />
                            </StackPanel>
                        </Button>
                        <Button Grid.Column="0" Grid.Row="2" Style="{StaticResource TabButton}" Click="BtnEnable_Click" 
                                ToolTip="{Binding Path=AxisT.StateAndErrorInfo, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                IsEnabled="{Binding Path=IsNotBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Grid.ColumnSpan="2" Margin="2,0,2,1">
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Width="13" Height="13" Margin="2,0,10,0" Fill="{Binding Path=AxisT.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolColorConverter}}"/>
                                <TextBlock Text="T "/>
                                <TextBlock Text="{Binding Path=AxisT.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolStringConverter}, ConverterParameter=Disable/Enable}" />
                            </StackPanel>
                        </Button>
                        <Button Grid.Column="2" Grid.Row="0" Style="{StaticResource TabButton}" Click="BtnEnable_Click" 
                                ToolTip="{Binding Path=AxisZ.StateAndErrorInfo, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                                IsEnabled="{Binding Path=IsNotBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Margin="2,0,2,1">
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Width="13" Height="13" Margin="2,0,10,0" Fill="{Binding Path=AxisZ.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolColorConverter}}"/>
                                <TextBlock Text="Z "/>
                                <TextBlock Text="{Binding Path=AxisZ.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolStringConverter}, ConverterParameter=Disable/Enable}" />
                            </StackPanel>
                        </Button>
                        <Button Grid.Column="2" Grid.Row="1" Style="{StaticResource TabButton}" Click="BtnEnableDamping_Click" IsEnabled="{Binding Path=IsNotBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Margin="2,1,2,0">
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Width="13" Height="13" Margin="2,0,10,0" ToolTip="On = Ready / Off = Not Ready"
                                           Fill="{Binding Path=DampingIsReady, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolColorConverter}}"/>
                                <TextBlock x:Name="TBlEnableDamping">Damping On/Off</TextBlock>
                            </StackPanel>
                        </Button>
                        <Button Grid.Column="2" Grid.Row="2" Style="{StaticResource TabButton}" Click="BtnResetDamping_Click" IsEnabled="{Binding Path=IsNotBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Margin="2,0,2,1">
                            <StackPanel Orientation="Horizontal">
                                <Rectangle Width="13" Height="13" Margin="2,0,10,0" ToolTip="On = Error / Off = No Error"
                                           Fill="{Binding Path=DampingHasError, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolColorConverter}, ConverterParameter=Red/DarkRed}"/>
                                <TextBlock>Damping Reset</TextBlock>
                            </StackPanel>
                        </Button>
                        <Button x:Name="BtnXYOffset" Grid.Column="3" Grid.Row="0" Style="{StaticResource TabButton}" Click="BtnHomeOffsets_Click" IsEnabled="{Binding Path=IsConnected, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Margin="2,0,2,1">
                            <StackPanel Orientation="Horizontal">
                                <Image Source=".\Icons\XYOffset.png"/>
                                <TextBlock>Home Offsets</TextBlock>
                            </StackPanel>
                        </Button>
                        <Button x:Name="BtnHoming" Grid.Column="3" Grid.Row="1" Style="{StaticResource TabButton}" Click="BtnHome_Click" IsEnabled="{Binding Path=IsNotBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Margin="2,1,2,0">
                            <StackPanel Orientation="Horizontal">
                                <Image Source=".\Icons\Measure.png" />
                                <TextBlock>Home</TextBlock>
                            </StackPanel>
                        </Button>
                        <Button x:Name="BtnMovePark" Grid.Column="3" Grid.Row="2" Style="{StaticResource TabButton}" Click="BtnMove_Click" IsEnabled="{Binding Path=IsNotBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Margin="2,0,2,1">
                            <StackPanel Orientation="Horizontal">
                                <Image Source=".\Icons\Park.png"/>
                                <TextBlock>Move Park</TextBlock>
                            </StackPanel>
                        </Button>
                    </Grid>
                    <StackPanel Orientation="Horizontal" IsEnabled="{Binding Path=IsNotBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                        <StackPanel Orientation="Vertical" IsEnabled="{Binding Path=AxisX.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                            <Button x:Name="BtnMoveUpLeft" Style="{StaticResource SmallTabButton}" Click="BtnMove_Click" Margin="1,2,1,1" IsEnabled="{Binding Path=AxisY.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                                <Image Margin="1" Source=".\Icons\ArrowUpLeft.png"/>
                            </Button>
                            <Button x:Name="BtnMoveLeft" Style="{StaticResource SmallTabButton}" Click="BtnMove_Click" Margin="1,1,1,2">
                                <Image Margin="1" Source=".\Icons\ArrowLeft.png"/>
                            </Button>
                            <Button x:Name="BtnMoveDownLeft" Style="{StaticResource SmallTabButton}" Click="BtnMove_Click" Margin="1,2,1,1" IsEnabled="{Binding Path=AxisY.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                                <Image Margin="1" Source=".\Icons\ArrowDownLeft.png"/>
                            </Button>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" IsEnabled="{Binding Path=AxisY.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                            <Button x:Name="BtnMoveUp" Grid.Row="0" Grid.Column="1" Style="{StaticResource SmallTabButton}" Click="BtnMove_Click" Margin="1,2,1,1">
                                <Image Margin="1" Source=".\Icons\ArrowUp.png"/>
                            </Button>
                            <TextBlock Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="5,5,5,4">XY</TextBlock>
                            <Button x:Name="BtnMoveDown" Grid.Row="2" Grid.Column="1" Style="{StaticResource SmallTabButton}" Click="BtnMove_Click" Margin="1,2,1,1">
                                <Image Margin="1" Source=".\Icons\ArrowDown.png"/>
                            </Button>
                        </StackPanel>
                        <StackPanel Orientation="Vertical" IsEnabled="{Binding Path=AxisX.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                            <Button x:Name="BtnMoveUpRight" Grid.Row="0" Grid.Column="2" Style="{StaticResource SmallTabButton}" Click="BtnMove_Click" Margin="1,2,1,1" IsEnabled="{Binding Path=AxisY.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                                <Image Margin="1" Source=".\Icons\ArrowUpRight.png"/>
                            </Button>
                            <Button x:Name="BtnMoveRight" Grid.Row="1" Grid.Column="2" Style="{StaticResource SmallTabButton}" Click="BtnMove_Click" Margin="1,1,1,2">
                                <Image Margin="1" Source=".\Icons\ArrowRight.png"/>
                            </Button>
                            <Button x:Name="BtnMoveDownRight" Grid.Row="2" Grid.Column="2" Style="{StaticResource SmallTabButton}" Click="BtnMove_Click" Margin="1,2,1,1" IsEnabled="{Binding Path=AxisY.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                                <Image Margin="1" Source=".\Icons\ArrowDownRight.png"/>
                            </Button>
                        </StackPanel>

                        <TextBox x:Name="TxtRelativeXY" Grid.Row="1" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left" Width="50" HorizontalContentAlignment="Right" Margin="0,4,0,3">10.00</TextBox>
                        <TextBlock Margin="3,5,0,4" Grid.Row="1" Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Left" Grid.ColumnSpan="2">mm</TextBlock>

                        <StackPanel Orientation="Vertical" IsEnabled="{Binding Path=AxisZ.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                            <Button x:Name="BtnZMoveUp" Grid.Row="0" Grid.Column="6" Style="{StaticResource SmallTabButton}" Click="BtnMove_Click" Margin="1,2,1,1" >
                                <Image Margin="1" Source=".\Icons\ArrowUp.png"/>
                            </Button>
                            <TextBlock Grid.Row="1" Grid.Column="6" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="9,5,8,4">Z</TextBlock>
                            <Button x:Name="BtnZMoveDown" Grid.Row="2" Grid.Column="6" Style="{StaticResource SmallTabButton}" Click="BtnMove_Click" Margin="1,2,1,1" >
                                <Image Margin="1" Source=".\Icons\ArrowDown.png"/>
                            </Button>
                        </StackPanel>

                        <TextBox x:Name="TxtRelativeZ" Grid.Row="1" Grid.Column="7" VerticalAlignment="Center" HorizontalAlignment="Left" Width="50" HorizontalContentAlignment="Right" Margin="0,4,0,3">10.00</TextBox>
                        <TextBlock Margin="3,5,0,4" Grid.Row="1" Grid.Column="8" VerticalAlignment="Center" HorizontalAlignment="Left">mm</TextBlock>

                        <StackPanel Orientation="Vertical" IsEnabled="{Binding Path=AxisT.Enabled, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
                            <Button x:Name="BtnTMovePos" Grid.Row="0" Grid.Column="9" Style="{StaticResource SmallTabButton}" Click="BtnMove_Click" Margin="1,2,1,1">
                                <Image Margin="1" Source=".\Icons\RotationLeft.png"/>
                            </Button>
                            <TextBlock Grid.Row="1" Grid.Column="9" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="9,5,9,4">T</TextBlock>
                            <Button x:Name="BtnTMoveNeg" Grid.Row="2" Grid.Column="9" Style="{StaticResource SmallTabButton}" Click="BtnMove_Click" Margin="1,2,1,1">
                                <Image Margin="1" Source=".\Icons\RotationRight.png"/>
                            </Button>
                        </StackPanel>

                        <TextBox x:Name="TxtRelativeT" Grid.Row="1" Grid.Column="10" VerticalAlignment="Center" HorizontalAlignment="Left" Width="50" HorizontalContentAlignment="Right" Margin="0,4,0,3">10.00</TextBox>
                        <TextBlock Margin="3,5,0,4" Grid.Row="1" Grid.Column="11" VerticalAlignment="Center" HorizontalAlignment="Left">deg</TextBlock>
                    </StackPanel>
                </StackPanel>
            </TabItem>

            <TabItem x:Name="TiParameter">
                <TabItem.Header>
                    <StackPanel Orientation="Horizontal">
                        <Image Source=".\Icons\Settings.png"/>
                        <TextBlock>Parameter</TextBlock>
                    </StackPanel>
                </TabItem.Header>
                <StackPanel IsEnabled="{Binding Path=IsConnected, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}" Orientation="Horizontal">
                    <Grid>
                        <Grid.Resources>

                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="70"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- Motion Parameter X -->
                        <Label Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="4" Padding="0" FontSize="70" FontWeight="Bold" Foreground="Gainsboro" Content="X" />
                        <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left">Speed</TextBlock>
                        <TextBox Text="{Binding Path=AxisX.Velocity, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatStringConverter}}" Grid.Row="0" Grid.Column="1" IsReadOnly="True" VerticalAlignment="Center" HorizontalAlignment="Left" Width="70" HorizontalContentAlignment="Right"/>
                        <TextBlock Grid.Row="0" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left">mm/s</TextBlock>
                        <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left">Acceleration</TextBlock>
                        <TextBox Text="{Binding Path=AxisX.Acceleration, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatStringConverter}}" Grid.Row="1" Grid.Column="1" IsReadOnly="True" VerticalAlignment="Center" HorizontalAlignment="Left" Width="70" HorizontalContentAlignment="Right"/>
                        <TextBlock Grid.Row="1" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left">mm/s2</TextBlock>
                        <TextBlock Grid.Row="2" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left">Jerk</TextBlock>
                        <TextBox Text="{Binding Path=AxisX.Jerk, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatStringConverter}}" Grid.Row="2" Grid.Column="1" IsReadOnly="True" VerticalAlignment="Center" HorizontalAlignment="Left" Width="70" HorizontalContentAlignment="Right"/>
                        <TextBlock Grid.Row="2" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left">mm/s3</TextBlock>
                        <TextBlock Grid.Row="3" Grid.Column="0" VerticalAlignment="Center" HorizontalAlignment="Left">DRFactor</TextBlock>
                        <Slider Value="{Binding Path=AxisX.DynamicReductionFactor, Mode=TwoWay}" Grid.Row="3" Grid.Column="1"  Width="70" Maximum="1" Minimum="0" TickFrequency="0.05" IsSnapToTickEnabled="True"/>
                        <TextBlock Text="{Binding Path=AxisX.DynamicReductionFactor, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatPercentStringConverter}}" Grid.Row="3" Grid.Column="2" VerticalAlignment="Center" HorizontalAlignment="Left"/>

                        <!-- Motion Parameter Y -->
                        <Label Grid.Row="0" Grid.Column="3" Grid.ColumnSpan="2" Grid.RowSpan="4" Padding="0" FontSize="70" FontWeight="Bold" Foreground="Gainsboro" Content="Y" />
                        <TextBlock Grid.Row="0" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left">Speed</TextBlock>
                        <TextBox Text="{Binding Path=AxisY.Velocity, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatStringConverter}}" Grid.Row="0" Grid.Column="4" IsReadOnly="True" VerticalAlignment="Center" HorizontalAlignment="Left" Width="70" HorizontalContentAlignment="Right"/>
                        <TextBlock Grid.Row="0" Grid.Column="5" VerticalAlignment="Center" HorizontalAlignment="Left">mm/s</TextBlock>
                        <TextBlock Grid.Row="1" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left">Acceleration</TextBlock>
                        <TextBox Text="{Binding Path=AxisY.Acceleration, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatStringConverter}}" Grid.Row="1" Grid.Column="4" IsReadOnly="True" VerticalAlignment="Center" HorizontalAlignment="Left" Width="70" HorizontalContentAlignment="Right"/>
                        <TextBlock Grid.Row="1" Grid.Column="5" VerticalAlignment="Center" HorizontalAlignment="Left">mm/s2</TextBlock>
                        <TextBlock Grid.Row="2" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left">Jerk</TextBlock>
                        <TextBox Text="{Binding Path=AxisY.Jerk, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatStringConverter}}" Grid.Row="2" Grid.Column="4" IsReadOnly="True" VerticalAlignment="Center" HorizontalAlignment="Left" Width="70" HorizontalContentAlignment="Right"/>
                        <TextBlock Grid.Row="2" Grid.Column="5" VerticalAlignment="Center" HorizontalAlignment="Left">mm/s3</TextBlock>
                        <TextBlock Grid.Row="3" Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Left">DRFactor</TextBlock>
                        <Slider Value="{Binding Path=AxisY.DynamicReductionFactor, Mode=TwoWay}" Grid.Row="3" Grid.Column="4"  Width="70" Maximum="1" Minimum="0" TickFrequency="0.05" IsSnapToTickEnabled="True"/>
                        <TextBlock Text="{Binding Path=AxisY.DynamicReductionFactor, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatPercentStringConverter}}" Grid.Row="3" Grid.Column="5" VerticalAlignment="Center" HorizontalAlignment="Left"/>

                        <!-- Motion Parameter Z -->
                        <Label Grid.Row="0" Grid.Column="6" Grid.ColumnSpan="2" Grid.RowSpan="4" Padding="0" FontSize="70" FontWeight="Bold" Foreground="Gainsboro" Content="Z" />
                        <TextBlock Grid.Row="0" Grid.Column="6" VerticalAlignment="Center" HorizontalAlignment="Left">Speed</TextBlock>
                        <TextBox Text="{Binding Path=AxisZ.Velocity, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatStringConverter}}" Grid.Row="0" Grid.Column="7" VerticalAlignment="Center" HorizontalAlignment="Left" Width="70" HorizontalContentAlignment="Right"/>
                        <TextBlock Grid.Row="0" Grid.Column="8" VerticalAlignment="Center" HorizontalAlignment="Left">mm/s</TextBlock>
                        <TextBlock Grid.Row="1" Grid.Column="6" VerticalAlignment="Center" HorizontalAlignment="Left">Acceleration</TextBlock>
                        <TextBox Text="{Binding Path=AxisZ.Acceleration, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatStringConverter}}" Grid.Row="1" Grid.Column="7" VerticalAlignment="Center" HorizontalAlignment="Left" Width="70" HorizontalContentAlignment="Right"/>
                        <TextBlock Grid.Row="1" Grid.Column="8" VerticalAlignment="Center" HorizontalAlignment="Left">mm/s2</TextBlock>
                        <TextBlock Grid.Row="2" Grid.Column="6" VerticalAlignment="Center" HorizontalAlignment="Left">Jerk</TextBlock>
                        <TextBox Text="{Binding Path=AxisZ.Jerk, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatStringConverter}}" Grid.Row="2" Grid.Column="7" VerticalAlignment="Center" HorizontalAlignment="Left" Width="70" HorizontalContentAlignment="Right"/>
                        <TextBlock Grid.Row="2" Grid.Column="8" VerticalAlignment="Center" HorizontalAlignment="Left">mm/s3</TextBlock>
                        <TextBlock Grid.Row="3" Grid.Column="6" VerticalAlignment="Center" HorizontalAlignment="Left">DRFactor</TextBlock>
                        <Slider Value="{Binding Path=AxisZ.DynamicReductionFactor, Mode=TwoWay}" Grid.Row="3" Grid.Column="7"  Width="70" Maximum="1" Minimum="0" TickFrequency="0.05" IsSnapToTickEnabled="True"/>
                        <TextBlock Text="{Binding Path=AxisZ.DynamicReductionFactor, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatPercentStringConverter}}" Grid.Row="3" Grid.Column="8" VerticalAlignment="Center" HorizontalAlignment="Left"/>

                        <!-- Motion Parameter T -->
                        <Label Grid.Row="0" Grid.Column="9" Grid.ColumnSpan="2" Grid.RowSpan="4" Padding="0" FontSize="70" FontWeight="Bold" Foreground="Gainsboro" Content="T" />
                        <TextBlock Grid.Row="0" Grid.Column="9" VerticalAlignment="Center" HorizontalAlignment="Left">Speed</TextBlock>
                        <TextBox Text="{Binding Path=AxisT.Velocity, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatStringConverter}}" Grid.Row="0" Grid.Column="10" VerticalAlignment="Center" HorizontalAlignment="Left" Width="70" HorizontalContentAlignment="Right"/>
                        <TextBlock Grid.Row="0" Grid.Column="11" VerticalAlignment="Center" HorizontalAlignment="Left">deg/s</TextBlock>
                        <TextBlock Grid.Row="1" Grid.Column="9" VerticalAlignment="Center" HorizontalAlignment="Left">Acceleration</TextBlock>
                        <TextBox Text="{Binding Path=AxisT.Acceleration, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatStringConverter}}" Grid.Row="1" Grid.Column="10" VerticalAlignment="Center" HorizontalAlignment="Left" Width="70" HorizontalContentAlignment="Right"/>
                        <TextBlock Grid.Row="1" Grid.Column="11" VerticalAlignment="Center" HorizontalAlignment="Left">deg/s2</TextBlock>
                        <TextBlock Grid.Row="2" Grid.Column="9" VerticalAlignment="Center" HorizontalAlignment="Left">Jerk</TextBlock>
                        <TextBox Text="{Binding Path=AxisT.Jerk, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatStringConverter}}" Grid.Row="2" Grid.Column="10" VerticalAlignment="Center" HorizontalAlignment="Left" Width="70" HorizontalContentAlignment="Right"/>
                        <TextBlock Grid.Row="2" Grid.Column="11" VerticalAlignment="Center" HorizontalAlignment="Left">deg/s3</TextBlock>
                        <TextBlock Grid.Row="3" Grid.Column="9" VerticalAlignment="Center" HorizontalAlignment="Left">DRFactor</TextBlock>
                        <Slider Value="{Binding Path=AxisT.DynamicReductionFactor, Mode=TwoWay}" Grid.Row="3" Grid.Column="10" Width="70" Maximum="1" Minimum="0" TickFrequency="0.05" IsSnapToTickEnabled="True"/>
                        <TextBlock Text="{Binding Path=AxisT.DynamicReductionFactor, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource FloatPercentStringConverter}}" Grid.Row="3" Grid.Column="11" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                    </Grid>
                </StackPanel>
            </TabItem>
        </TabControl>

        <!--StatusBar-->
        <StatusBar DockPanel.Dock="Bottom" VerticalAlignment="Center" Background="{StaticResource PanelBackground}">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <!--Discription-->
                            <ColumnDefinition Width="Auto" />
                            <!--X-Coordinate-->
                            <ColumnDefinition Width="Auto" />
                            <!--Seperator-->
                            <ColumnDefinition Width="Auto" />
                            <!--Y-Coordinate-->
                            <ColumnDefinition Width="Auto" />
                            <!--Seperator-->
                            <ColumnDefinition Width="Auto" />
                            <!--Z-Coordinate-->
                            <ColumnDefinition Width="Auto" />
                            <!--Seperator-->
                            <ColumnDefinition Width="Auto" />
                            <!--T-Coordinate-->
                            <ColumnDefinition Width="Auto" />
                            <!--Seperator-->
                            <ColumnDefinition Width="Auto" />
                            <!--A0-Coordinate-->
                            <ColumnDefinition Width="Auto" />
                            <!--Seperator-->
                            <ColumnDefinition Width="Auto" />
                            <!--A1-Coordinate-->
                            <ColumnDefinition Width="Auto" />
                            <!--Seperator-->
                            <ColumnDefinition Width="Auto" />
                            <!--A2-Coordinate-->
                            <ColumnDefinition Width="Auto" />
                            <!--ProgressBar-->
                            <ColumnDefinition Width="*" />
                            <!--ProgressMsg-->
                            <ColumnDefinition Width="Auto" />
                            <!--TriamecPowerSupply-->
                            <ColumnDefinition Width="Auto" />
                            <!--ConnectionStatus-->
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <TextBlock x:Name="TbCoord">(X|Y|Z|T|A0|A1|A2) mm | deg:</TextBlock>
            </StatusBarItem>
            <StatusBarItem Grid.Column="1" Width="40" HorizontalContentAlignment="Right">
                <TextBlock x:Name="TbPosX">0.000</TextBlock>
            </StatusBarItem>
            <Separator Grid.Column="2"/>
            <StatusBarItem Grid.Column="3" Width="40" HorizontalContentAlignment="Right">
                <TextBlock x:Name="TbPosY">0.000</TextBlock>
            </StatusBarItem>
            <Separator Grid.Column="4"/>
            <StatusBarItem Grid.Column="5" Width="40" HorizontalContentAlignment="Right">
                <TextBlock x:Name="TbPosZ">0.000</TextBlock>
            </StatusBarItem>
            <Separator Grid.Column="6"/>
            <StatusBarItem Grid.Column="7" Width="40" HorizontalContentAlignment="Right">
                <TextBlock x:Name="TbPosT">0.000</TextBlock>
            </StatusBarItem>
            <Separator Grid.Column="8"/>
            <StatusBarItem Grid.Column="9" Width="60" HorizontalContentAlignment="Right">
                <TextBlock x:Name="TbPosA0">0.0000</TextBlock>
            </StatusBarItem>
            <Separator Grid.Column="10"/>
            <StatusBarItem Grid.Column="11" Width="60" HorizontalContentAlignment="Right">
                <TextBlock x:Name="TbPosA1">0.0000</TextBlock>
            </StatusBarItem>
            <Separator Grid.Column="12"/>
            <StatusBarItem Grid.Column="13" Width="60" HorizontalContentAlignment="Right">
                <TextBlock x:Name="TbPosA2">0.0000</TextBlock>
            </StatusBarItem>
            <Separator Grid.Column="14"/>
            <StatusBarItem Grid.Column="15">
                <ProgressBar x:Name="PgbProgress" Maximum="100" Minimum="0" Value="50" Visibility="Hidden" Width="70" Height="16" ToolTip="{Binding ElementName=PgbProgress, Path=Value}" />
            </StatusBarItem>
            <StatusBarItem Grid.Column="16">
                <TextBlock x:Name="TbProgMsg" Visibility="Hidden">Progress Message</TextBlock>
            </StatusBarItem>
            <StatusBarItem BorderBrush="Transparent" BorderThickness="0,3,3,3" Grid.Column="17">
                <Rectangle Width="14" Height="14" RadiusX="7" RadiusY="7" ToolTip="State of Triamec Power Supply"
                           Visibility="{Binding Path=IsConnected, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}"
                           Fill="{Binding Path=PowerSupplyOK, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolColorConverter}}"/>
            </StatusBarItem>
            <StatusBarItem BorderBrush="Transparent" BorderThickness="0,3,3,3" Grid.Column="18">
                <Button x:Name="BtnConnect" Width="90" Height="18" Click="BtnConnect_Click"
                        IsEnabled="{Binding Path=IsNotBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}"
                        Background="{Binding Path=IsConnected, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolColorConverter}, ConverterParameter=Green/Red}"
                        Content="{Binding Path=IsConnected, UpdateSourceTrigger=PropertyChanged, Mode=OneWay, Converter={StaticResource BoolStringConverter}, ConverterParameter=Connected/NotConnected}"/>
            </StatusBarItem>
        </StatusBar>

        <!--MotionPreview-->
        <Viewbox>
            <Grid x:Name="GrdMotionPreview" Margin="100">
                <Grid.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="-1"/>
                        <TranslateTransform X="0" Y="{Binding ElementName=GrdMotionPreview, Path=ActualHeight}"/>
                    </TransformGroup>
                </Grid.RenderTransform>

                <!--Baseplate-->
                <Image Source=".\Icons\Base.png">
                    <Image.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-100" Y="-68"/>
                            <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
                        </TransformGroup>
                    </Image.RenderTransform>
                </Image>

                <!--Slide-->
                <Image Source=".\Icons\Slide.png">
                    <Image.RenderTransform>
                        <TransformGroup>
                            <ScaleTransform ScaleX="1.35" ScaleY="1.35"/>
                            <TranslateTransform X="135" Y="-79"/>
                            <TranslateTransform X="{Binding ElementName=TbPosX, Path=Text}"/>
                        </TransformGroup>
                    </Image.RenderTransform>
                </Image>

                <!--Chuck-->
                <Image Source=".\Icons\Chuck.png">
                    <Image.RenderTransform>
                        <TransformGroup>
                            <TranslateTransform X="-204" Y="-204"/>
                            <!-- Image Offset -->
                            <RotateTransform Angle="180"/>
                            <!--Coordinate Origin-->
                            <RotateTransform Angle="{Binding ElementName=TbPosT, Path=Text}"/>
                            <ScaleTransform ScaleX="0.7" ScaleY="0.7"/>
                            <TranslateTransform X="343" Y="183"/>
                            <!--Coordinate Origin-->
                            <TranslateTransform X="{Binding ElementName=TbPosX, Path=Text}" Y="{Binding ElementName=TbPosY, Path=Text}"/>
                        </TransformGroup>
                    </Image.RenderTransform>
                </Image>

                <!--MotionLimits-->
                <Path Stroke="Red" StrokeThickness="3" StrokeStartLineCap="Round" StrokeEndLineCap="Round" StrokeDashArray="2.5">
                    <Path.Data>
                        <RectangleGeometry Rect="75,20,450,410"/>
                    </Path.Data>
                </Path>

                <!--Cursor-->
                <Path Stroke="YellowGreen" StrokeThickness="2">
                    <Path.Data>
                        <GeometryGroup x:Name="GegCursor">
                            <LineGeometry StartPoint="3,0" EndPoint="15,0"/>
                            <LineGeometry StartPoint="0,3" EndPoint="-5,30"/>
                            <LineGeometry StartPoint="0,3" EndPoint="5,30"/>
                            <LineGeometry StartPoint="-3,0" EndPoint="-15,0"/>
                            <LineGeometry StartPoint="0,-3" EndPoint="0,-15"/>
                            <EllipseGeometry Center="0,0" RadiusX="3" RadiusY="3"/>
                            <GeometryGroup.Transform>
                                <TransformGroup>
                                    <RotateTransform Angle="0"/>
                                    <!--Coordinate Origin-->
                                    <RotateTransform x:Name="CursorRotation" Angle="{Binding ElementName=TbPosT, Path=Text}"/>
                                    <TranslateTransform X="345" Y="210"/>
                                    <!--Coordinate Origin-->
                                    <TranslateTransform x:Name="CursorTranslation" X="{Binding ElementName=TbPosX, Path=Text}" Y="{Binding ElementName=TbPosY, Path=Text}"/>
                                </TransformGroup>
                            </GeometryGroup.Transform>
                        </GeometryGroup>
                    </Path.Data>
                </Path>
            </Grid>
        </Viewbox>
    </DockPanel>
</Window>